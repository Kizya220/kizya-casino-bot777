import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import CommandStart
import sqlite3
import os

BOT_TOKEN = os.getenv("BOT_TOKEN") or "7793577409:AAHiW1H9nA4Z8A8I-wzSesxJEcwC7tI3eQI"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î
def init_db():
    conn = sqlite3.connect("casino.db")
    cur = conn.cursor()
    cur.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            language TEXT,
            balance INTEGER DEFAULT 1000
        )
    ''')
    conn.commit()
    conn.close()

@dp.message(CommandStart())
async def start_handler(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or "unknown"
    conn = sqlite3.connect("casino.db")
    cur = conn.cursor()
    cur.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user = cur.fetchone()
    if not user:
        lang_kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶"), KeyboardButton(text="–†—É—Å—Å–∫–∏–π üá∑üá∫")]
            ],
            resize_keyboard=True
        )
        await message.answer("–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=lang_kb)
        cur.execute("INSERT INTO users (user_id, username) VALUES (?, ?)", (user_id, username))
        conn.commit()
    else:
        await message.answer("–í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ! / –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")

    conn.close()

@dp.message(lambda message: message.text in ["–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶", "–†—É—Å—Å–∫–∏–π üá∑üá∫"])
async def language_set(message: types.Message):
    lang = "ua" if "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞" in message.text else "ru"
    conn = sqlite3.connect("casino.db")
    cur = conn.cursor()
    cur.execute("UPDATE users SET language=? WHERE user_id=?", (lang, message.from_user.id))
    conn.commit()
    conn.close()
    await message.answer("‚úÖ –ú–æ–≤—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!" if lang == "ua" else "‚úÖ –Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

async def main():
    init_db()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
